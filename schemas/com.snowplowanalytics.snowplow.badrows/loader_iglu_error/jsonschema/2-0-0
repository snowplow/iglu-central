{
  "$schema": "http://iglucentral.com/schemas/com.snowplowanalytics.self-desc/schema/jsonschema/1-0-0#",
  "description": "Schema for Iglu related errors which could be during validation or schema lookup",
  "self": {
    "vendor": "com.snowplowanalytics.snowplow.badrows",
    "name": "loader_iglu_error",
    "format": "jsonschema",
    "version": "2-0-0"
  },
  "type": "object",
  "properties": {
    "failure": {
      "type": "array",
      "description": "List of failure messages caused by Iglu subsystem",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "description": "Supplied JSON did not validate against its schema (or schema was not found) (IgluError)",
            "properties": {
              "schemaKey": {
                "type": "string",
                "description": "The iglu schema coordinates to validate against"
              },
              "error": {
                "description": "Iglu client error",
                "anyOf": [
                  {
                    "description": "Resolution error - schema could not be found in the specified repositories, defined by ResolutionError in the Iglu Client",
                    "properties": {
                      "error": {
                        "enum": ["ResolutionError"]
                      },
                      "lookupHistory": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "string",
                              "description": "Name of the repository as written in resolver.json"
                            },
                            "errors": {
                              "description": "Set of errors which happened for this repository",
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "description": "Type of error (NotFound does not contain a message)",
                                    "enum": ["RepoFailure", "ClientFailure", "NotFound"]
                                  },
                                  "message": {
                                    "description": "Optional message in case of ClientFailure or RepoFailure",
                                    "type": "string",
                                    "maxLength": 256
                                  }
                                },
                                "required": ["error" ]
                              }
                            },
                            "attempts": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "Number of attempts which have been made"
                            },
                            "lastAttempt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp of a last attempt being made"
                            }
                          },
                          "required": ["repository", "errors", "attempts", "lastAttempt"]
                        }
                      }
                    },
                    "required": [ "error", "lookupHistory" ],
                    "additionalProperties": false
                  },
                  {
                    "description": "Data is invalid against resolved schema",
                    "properties": {
                      "error": {
                        "enum": ["ValidationError"]
                      },
                      "dataReports": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Human-readable message describing the issue with the schema"
                            },
                            "path": {
                              "type": ["string", "null"],
                              "description": "JSON Path to an issue in the faulty JSON datum"
                            },
                            "keyword": {
                              "type": ["string", "null"],
                              "description": "JSON Schema Keywrod caused invalidation"
                            },
                            "targets": {
                              "type": ["array", "null"]
                            }
                          },
                          "required": [ "path", "message", "keyword", "targets" ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [ "dataReports" ],
                    "additionalProperties": false
                  },
                  {
                    "description": "Schema is invalid and cannot be used to validate an instance",
                    "properties": {
                      "error": {
                        "enum": ["ValidationError"]
                      },
                      "schemaIssues": {
                        "description": "List of problems in resolved JSON schema",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "JSON Path to an issue in the faulty JSON Schema"
                            },
                            "message": {
                              "type": "string",
                              "description": "Human-readable message describing the issue with the schema"
                            }
                          },
                          "required": [ "path", "message" ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [ "error" ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "additionalProperties": false
          },

          {
            "type": "object",
            "description": "JSON returned from a registry couldn't be parsed as a JSON Schema AST (InvalidSchema)",
            "properties": {
              "schemaKey": {
                "description": "Requested schema key",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message",
                "type": "string"
              }
            },
            "required": ["schemaKey", "message" ],
            "additionalProperties": false
          },

          {
            "type": "object",
            "description": "Resolver couldn't resolve a SchemaList (entity for shredding and migration) (SchemaListNotFound)",
            "properties": {
              "schemaCriterion": {
                "type": "string",
                "description": "Criterion of a list (model-based)"
              },
              "error": {
                "description": "Iglu client error",
                "anyOf": [
                  {
                    "description": "Resolution error - schema could not be found in the specified repositories, defined by ResolutionError in the Iglu Client",
                    "properties": {
                      "error": {
                        "enum": ["ResolutionError"]
                      },
                      "lookupHistory": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "string",
                              "description": "Name of the repository as written in resolver.json"
                            },
                            "errors": {
                              "description": "Set of errors which happened for this repository",
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "description": "Type of error (NotFound does not contain a message)",
                                    "enum": ["RepoFailure", "ClientFailure", "NotFound"]
                                  },
                                  "message": {
                                    "description": "Optional message in case of ClientFailure or RepoFailure",
                                    "type": "string",
                                    "maxLength": 256
                                  }
                                },
                                "required": ["error" ]
                              }
                            },
                            "attempts": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "Number of attempts which have been made"
                            },
                            "lastAttempt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp of a last attempt being made"
                            }
                          },
                          "required": ["repository", "errors", "attempts", "lastAttempt"]
                        }
                      }
                    },
                    "required": [ "error", "lookupHistory" ],
                    "additionalProperties": false
                  },
                  {
                    "description": "Data is invalid against resolved schema",
                    "properties": {
                      "error": {
                        "enum": ["ValidationError"]
                      },
                      "dataReports": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Human-readable message describing the issue with the schema"
                            },
                            "path": {
                              "type": ["string", "null"],
                              "description": "JSON Path to an issue in the faulty JSON datum"
                            },
                            "keyword": {
                              "type": ["string", "null"],
                              "description": "JSON Schema Keywrod caused invalidation"
                            },
                            "targets": {
                              "type": ["array", "null"]
                            }
                          },
                          "required": [ "path", "message", "keyword", "targets" ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [ "dataReports" ],
                    "additionalProperties": false
                  },
                  {
                    "description": "Schema is invalid and cannot be used to validate an instance",
                    "properties": {
                      "error": {
                        "enum": ["ValidationError"]
                      },
                      "schemaIssues": {
                        "description": "List of problems in resolved JSON schema",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "JSON Path to an issue in the faulty JSON Schema"
                            },
                            "message": {
                              "type": "string",
                              "description": "Human-readable message describing the issue with the schema"
                            }
                          },
                          "required": [ "path", "message" ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [ "error" ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "required": ["schemaCriterion", "error" ],
            "additionalProperties": false
          },

          {
            "type": "object",
            "description": "JSON type mismatch against schema (WrongType)",
            "properties": {
              "schemaKey": {
                "description": "Supplied schema key",
                "type": "string"
              },
              "value": {
                "description": "Supplied JSON value"
              },
              "expected": {
                "type": "string",
                "description": "Expected type (either machine or human-readable)"
              }
            },
            "required": [ "schemaKey", "value", "expected" ],
            "additionalProperties": false
          },

          {
            "type": "object",
            "description": "Value expected to be repeatable (NotAnArray)",
            "properties": {
              "schemaKey": {
                "description": "Supplied schema key",
                "type": "string"
              },
              "value": {
                "description": "Supplied JSON value"
              },
              "expected": {
                "type": "string",
                "description": "Expected type (either machine or human-readable)"
              }
            },
            "required": [ "schemaKey", "value", "expected" ],
            "additionalProperties": false
          },

          {
            "type": "object",
            "description": "Key is required by schema, but missing in a value (MissingInValue)",
            "properties": {
              "schemaKey": {
                "description": "Supplied schema key",
                "type": "string"
              },
              "key": {
                "description": "Expected key"
              },
              "value": {
                "description": "Provided JSON value"
              }
            },
            "required": [ "schemaKey", "key", "value" ],
            "additionalProperties": false
          }
        ]
      }
    },
    "payload": {
      "type": "object",
      "description": "The enriched event that resulted in a storage loader failure",
      "properties": {
        "app_id": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "platform": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "etl_tstamp": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "collector_tstamp": {
          "type": "string",
          "format": "date-time"
        },
        "dvce_created_tstamp": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "event": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "event_id": {
          "type": "string",
          "maxLength": 36
        },
        "txn_id": {
          "type": ["integer", "null"]
        },
        "name_tracker": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "v_tracker": {
          "type": ["string", "null"],
          "maxLength": 100
        },
        "v_collector": {
          "type": "string",
          "maxLength": 100
        },
        "v_etl": {
          "type": "string",
          "maxLength": 100
        },
        "user_id": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "user_ipaddress": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "user_fingerprint": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "domain_userid": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "domain_sessionidx": {
          "type": ["integer", "null"]
        },
        "network_userid": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "geo_country": {
          "type": ["string", "null"],
          "maxLength": 2
        },
        "geo_region": {
          "type": ["string", "null"],
          "maxLength": 3
        },
        "geo_city": {
          "type": ["string", "null"],
          "maxLength": 75
        },
        "geo_zipcode": {
          "type": ["string", "null"],
          "maxLength": 15
        },
        "geo_latitude": {
          "type": ["number", "null"]
        },
        "geo_longitude": {
          "type": ["number", "null"]
        },
        "geo_region_name": {
          "type": ["string", "null"],
          "maxLength": 100
        },
        "ip_isp": {
          "type": ["string", "null"],
          "maxLength": 100
        },
        "ip_organization": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "ip_domain": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "ip_netspeed": {
          "type": ["string", "null"],
          "maxLength": 100
        },
        "page_url": {
          "type": ["string", "null"],
          "maxLength": 4096
        },
        "page_title": {
          "type": ["string", "null"],
          "maxLength": 2000
        },
        "page_referrer": {
          "type": ["string", "null"],
          "maxLength": 4096
        },
        "page_urlscheme": {
          "type": ["string", "null"],
          "maxLength": 16
        },
        "page_urlhost": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "page_urlport": {
          "type": ["integer", "null"]
        },
        "page_urlpath": {
          "type": ["string", "null"],
          "maxLength": 3000
        },
        "page_urlquery": {
          "type": ["string", "null"],
          "maxLength": 6000
        },
        "page_urlfragment": {
          "type": ["string", "null"],
          "maxLength": 3000
        },
        "refr_urlscheme": {
          "type": ["string", "null"],
          "maxLength": 16
        },
        "refr_urlhost": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "refr_urlport": {
          "type": ["integer", "null"]
        },
        "refr_urlpath": {
          "type": ["string", "null"],
          "maxLength": 6000
        },
        "refr_urlquery": {
          "type": ["string", "null"],
          "maxLength": 6000
        },
        "refr_urlfragment": {
          "type": ["string", "null"],
          "maxLength": 3000
        },
        "refr_medium": {
          "type": ["string", "null"],
          "maxLength": 25
        },
        "refr_source": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "refr_term": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "mkt_medium": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "mkt_source": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "mkt_term": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "mkt_content": {
          "type": ["string", "null"],
          "maxLength": 500
        },
        "mkt_campaign": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "se_category": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "se_action": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "se_label": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "se_property": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "se_value": {
          "type": ["number", "null"]
        },
        "tr_orderid": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "tr_affiliation": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "tr_total": {
          "type": ["number", "null"]
        },
        "tr_tax": {
          "type": ["number", "null"]
        },
        "tr_shipping": {
          "type": ["number", "null"]
        },
        "tr_city": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "tr_state": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "tr_country": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "ti_orderid": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "ti_sku": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "ti_name": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "ti_category": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "ti_price": {
          "type": ["number", "null"]
        },
        "ti_quantity": {
          "type": ["integer", "null"]
        },
        "pp_xoffset_min": {
          "type": ["integer", "null"]
        },
        "pp_xoffset_max": {
          "type": ["integer", "null"]
        },
        "pp_yoffset_min": {
          "type": ["integer", "null"]
        },
        "pp_yoffset_max": {
          "type": ["integer", "null"]
        },
        "useragent": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "br_name": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "br_family": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "br_version": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "br_type": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "br_renderengine": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "br_lang": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "br_features_pdf": {
          "type": ["boolean", "null"]
        },
        "br_features_flash": {
          "type": ["boolean", "null"]
        },
        "br_features_java": {
          "type": ["boolean", "null"]
        },
        "br_features_director": {
          "type": ["boolean", "null"]
        },
        "br_features_quicktime": {
          "type": ["boolean", "null"]
        },
        "br_features_realplayer": {
          "type": ["boolean", "null"]
        },
        "br_features_windowsmedia": {
          "type": ["boolean", "null"]
        },
        "br_features_gears": {
          "type": ["boolean", "null"]
        },
        "br_features_silverlight": {
          "type": ["boolean", "null"]
        },
        "br_cookies": {
          "type": ["boolean", "null"]
        },
        "br_colordepth": {
          "type": ["string", "null"],
          "maxLength": 12
        },
        "br_viewwidth": {
          "type": ["integer", "null"]
        },
        "br_viewheight": {
          "type": ["integer", "null"]
        },
        "os_name": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "os_family": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "os_manufacturer": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "os_timezone": {
          "type": ["string", "null"],
          "maxLength": 255
        },
        "dvce_type": {
          "type": ["string", "null"],
          "maxLength": 50
        },
        "dvce_ismobile": {
          "type": ["boolean", "null"]
        },
        "dvce_screenwidth": {
          "type": ["integer", "null"]
        },
        "dvce_screenheight": {
          "type": ["integer", "null"]
        },
        "doc_charset": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "doc_width": {
          "type": ["integer", "null"]
        },
        "doc_height": {
          "type": ["integer", "null"]
        },
        "tr_currency": {
          "type": ["string", "null"],
          "maxLength": 3
        },
        "tr_total_base": {
          "type": ["number", "null"]
        },
        "tr_tax_base": {
          "type": ["number", "null"]
        },
        "tr_shipping_base": {
          "type": ["number", "null"]
        },
        "ti_currency": {
          "type": ["string", "null"],
          "maxLength": 3
        },
        "ti_price_base": {
          "type": ["number", "null"]
        },
        "base_currency": {
          "type": ["string", "null"],
          "maxLength": 3
        },
        "geo_timezone": {
          "type": ["string", "null"],
          "maxLength": 64
        },
        "mkt_clickid": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "mkt_network": {
          "type": ["string", "null"],
          "maxLength": 64
        },
        "etl_tags": {
          "type": ["string", "null"],
          "maxLength": 500
        },
        "dvce_sent_tstamp": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "refr_domain_userid": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "refr_dvce_tstamp": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "domain_sessionid": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "derived_tstamp": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "event_vendor": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "event_name": {
          "type": ["string", "null"],
          "maxLength": 1000
        },
        "event_format": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "event_version": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "event_fingerprint": {
          "type": ["string", "null"],
          "maxLength": 128
        },
        "true_tstamp": {
          "type": ["string", "null"],
          "format": "date-time"
        },
        "unstruct_event": { "type": ["object", "null"] },
        "contexts": { "type": ["object", "null" ]},
        "derived_contexts": { "type": ["object", "null" ]}
      },
      "additionalProperties": false
    },
    "processor": {
      "type": "object",
      "description": "Information about the piece of software responsible for the creation of enrichment failures",
      "properties": {
        "artifact": {
          "type": "string",
          "description": "Artifact responsible for the creation of enrichment failures",
          "maxLength": 512
        },
        "version": {
          "type": "string",
          "description": "Version of the artifact responsible for the creation of enrichment failures",
          "pattern": "^(\\d+\\.\\d+\\.\\d+.*)$",
          "maxLength": 32
        }
      },
      "required": [ "artifact", "version" ],
      "additionalProperties": false
    }
  },
  "required": ["failure", "payload", "processor" ],
  "additionalProperties": false
}
